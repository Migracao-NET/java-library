name: Java CI with Gradle

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    build:

        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v4
          - uses: actions/setup-java@v4
            with:
              java-version: '17'
              distribution: 'temurin'

          - name: Setup Gradle
            uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

          - name: Permitir execução do gradlew
            run: chmod +x gradlew

          - name: Build with Gradle
            run: ./gradlew build

          - name: Run Tests
            run: ./gradlew test

          # - name: SonarCloud Scan
          #   uses: SonarSource/sonarqube-scan-action@v5
          #   env:
          #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          #   with:
          #     args: >
          #       -Dsonar.organization='migracao-net'
          #       -Dsonar.projectKey=${{ github.event.repository.name }}
          #       -Dsonar.projectName=${{ github.event.repository.name }}
          #       -Dsonar.verbose=true

          - name: Upload build artifacts
            uses: actions/upload-artifact@v4
            with:
              name: Package
              path: build/libs

    # deploy:
    #     runs-on: ubuntu-latest
    #     needs: build
          # permissions:
          #   contents: read
          #   packages: write
    #     steps:
    #       - uses: actions/checkout@v4
    #       - uses: actions/download-artifact@v4
    #         with:
    #           name: Package

    #       - name: Deploy to Server
    #         run: |
    #           echo "Deploying to server..."
    #           # Aqui você pode adicionar os comandos para fazer o deploy do seu aplicativo
    #           # Por exemplo, copiar os arquivos para um servidor remoto via SCP ou SFTP
    #           # ou usar uma ferramenta de deploy como Ansible, Capistrano, etc.
    #           echo "Deploy completed successfully!"
